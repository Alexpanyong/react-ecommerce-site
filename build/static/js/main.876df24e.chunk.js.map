{"version":3,"sources":["app/shared/config/pageNames.js","app/shared/config/routerPathNames.js","app/components/TopbarNav/TopbarNav.js","app/layout/topBar/TopBar.js","app/store/actions/actions.js","app/store/actions/actionTypes.js","app/components/Button/Button.js","app/components/Book/Book.js","app/modules/home/Home.js","app/modules/selectedBook/SelectedBook.js","app/components/OrderedItem/OrderedItem.js","app/modules/myOrders/MyOrders.js","app/components/ShoppingBagItem/ShoppingBagItem.js","app/modules/cart/Cart.js","app/shared/config/config.js","app/App.js","serviceWorker.js","app/store/reducers/appReducer.js","app/store/reducers/dataReducer.js","app/store/reducers/reducers.js","app/shared/api/api.js","app/store/sagas.js","app/store/store.js","app/components/Loading/Loading.js","index.js"],"names":["pageNames","Home","Detail","MyOrders","Cart","routerPathNames","Default","TopbarNav","currentPage","cart","handleSetCurrentPage","showMobileMenu","toggleMobileMenu","className","onClick","id","length","to","TopBar","props","selectedBook","handleGoToHomepage","useEffect","window","location","pathname","SelectedBook","title","addToCart","item","type","timestamp","Date","now","setSelectedBook","deleteShoppingBagItem","Button","classAddon","text","handleClick","Book","book","image","subtitle","dispatch","useDispatch","console","log","actions","src","alt","app","data","resetSelectedBookState","booksData","books","useState","bookList","setBookList","isEmpty","_books","map","Math","random","key","price","isbn13","href","OrderedItem","ordertime","myOrders","ShoppingBagItem","handleDeleteItem","taxAmount","shippingChargeAmount","consolidatedPrice","setConsolidatedPrice","items","reduce","acc","slice","getConsolidatedPrice","toFixed","_dateObj","_day","getDate","_month","month","getMonthString","getMonth","_year","getFullYear","_itemsToCheckout","NotFound","connect","state","useSelector","setShowMobileMenu","pageName","topBarProps","homeProps","selectedBookProps","myOrdersProps","cartProps","exact","path","Boolean","hostname","match","appReducer","action","filter","dataReducer","reducers","combineReducers","fetchBooksData","a","fetch","mode","response","json","sampleData","getBooksData","rootSaga","call","put","takeLatest","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","persistConfig","storage","persistedReducer","persistReducer","composedReducer","store","createStore","applyMiddleware","persistor","persistStore","run","Loading","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.876df24e.chunk.js","sourcesContent":["export const pageNames = {\n  Home: \"Home\",\n  Detail: \"Detail\",\n  MyOrders: \"MyOrders\",\n  Cart: \"Cart\",\n};\n","export const routerPathNames = {\n  Default: \"\",\n  Home: \"/\",\n  Detail: \"/detail\",\n  MyOrders: \"/myorders\",\n  Cart: \"/mycart\",\n};\n","import React, { Fragment } from \"react\";\nimport \"./TopbarNav.scss\";\nimport { Link } from \"react-router-dom\";\nimport { pageNames } from \"../../shared/config/pageNames\";\nimport { routerPathNames } from \"../../shared/config/routerPathNames\";\n\nconst TopbarNav = ({ currentPage, cart, handleSetCurrentPage, showMobileMenu, toggleMobileMenu }) => {\n  return (\n    <Fragment>\n      <nav className=\"topBarNav\">\n        <div className=\"mobileMenuButton\" onClick={toggleMobileMenu}>\n          <div className=\"mobileMenuIcon\">\n            <div className=\"iconStroke\" id=\"stroke01\"></div>\n            <div className=\"iconStroke\" id=\"stroke02\"></div>\n          </div>\n          {cart.length > 0 && <span className=\"cartItemsNumber\" id=\"cartIndicatorMobile\">{cart.length}</span>}\n        </div>\n        <ul className={showMobileMenu ? \"mobileMenu\" : \"\"} id=\"mobileMenu\">\n          <li\n            id=\"home\"\n            className={`navItem ${\n              currentPage === pageNames.Home ? \"highlighted\" : \"\"\n            }`}\n            onClick={() => handleSetCurrentPage(pageNames.Home)}\n          >\n            <Link className=\"navLink\" to={routerPathNames.Home}>\n              Home\n            </Link>\n          </li>\n          <li\n            id=\"myOrders\"\n            className={`navItem ${\n              currentPage === pageNames.MyOrders ? \"highlighted\" : \"\"\n            }`}\n            onClick={() => {\n              handleSetCurrentPage(pageNames.MyOrders);\n              if (showMobileMenu) {\n                toggleMobileMenu();\n              }\n            }}\n          >\n            <Link className=\"navLink\" to={routerPathNames.MyOrders}>\n              My Orders\n            </Link>\n          </li>\n          <li\n            id=\"cart\"\n            className={`navItem ${\n              currentPage === pageNames.Cart ? \"highlighted\" : \"\"\n            }`}\n            onClick={() => {\n              handleSetCurrentPage(pageNames.Cart);\n              if (showMobileMenu) {\n                toggleMobileMenu();\n              }\n            }}\n          >\n            <Link className=\"navLink\" to={routerPathNames.Cart}>\n              Cart\n              {cart.length > 0 && <span className=\"cartItemsNumber\">{cart.length}</span>}\n            </Link>\n          </li>\n        </ul>\n        \n      </nav>\n    </Fragment>\n  )\n}\n\nexport default TopbarNav;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./TopBar.scss\";\nimport { pageNames } from \"../../shared/config/pageNames\";\nimport { routerPathNames } from \"../../shared/config/routerPathNames\";\nimport TopbarNav from \"../../components/TopbarNav/TopbarNav\";\n\nconst TopBar = (props) => {\n  const { currentPage, selectedBook, cart, handleSetCurrentPage, showMobileMenu, toggleMobileMenu, handleGoToHomepage } = props;\n\n  useEffect(() => {\n    /** Initial menu highlight * */\n    switch (window.location.pathname) {\n      case routerPathNames.Home:\n        handleSetCurrentPage(pageNames.Home);\n        break;\n      case routerPathNames.SelectedBook:\n        handleSetCurrentPage(pageNames.SelectedBook);\n        break;\n      case routerPathNames.MyOrders:\n        handleSetCurrentPage(pageNames.MyOrders);\n        break;\n      case routerPathNames.Cart:\n        handleSetCurrentPage(pageNames.Cart);\n        break;\n      default:\n        break;\n    }\n    return () => {};\n  }, []);\n\n  return (\n    <div className=\"topBarWrap\">\n      <div className=\"logo\">\n        <Link className=\"logoLink\" to={routerPathNames.Home} onClick={handleGoToHomepage} >\n          eCommerce Site\n        </Link>\n      </div>\n      <div className=\"selectedBookTitle\">{`${selectedBook ? `${selectedBook.title}` : \"\"}`}</div>\n      <TopbarNav \n        currentPage={currentPage} \n        cart={cart} \n        handleSetCurrentPage={handleSetCurrentPage} \n        showMobileMenu={showMobileMenu} \n        toggleMobileMenu={toggleMobileMenu} \n      />\n    </div>\n  );\n};\n\nexport default TopBar;\n","import * as actions from \"./actionTypes\";\n\n/*\n * For app state *\n */\nexport const setCurrentPage = (currentPage) => ({\n  type: actions.SET_CURRENT_PAGE,\n  currentPage,\n});\n\nexport const addToCart = (item) => ({\n  type: actions.ADD_TO_CART,\n  item: {...item, timestamp: Date.now()},\n});\n\nexport const setSelectedBook = (item) => ({\n  type: actions.SET_SELECTED_BOOK,\n  item,\n});\n\nexport const checkOut = (item) => ({\n  type: actions.CHECK_OUT,\n  item,\n});\n\nexport const clearCart = () => ({\n  type: actions.CLEAR_CART,\n});\n\nexport const clearOrderRecords = () => ({\n  type: actions.CLEAR_ORDER_RECORDS,\n});\n\nexport const deleteShoppingBagItem = (item) => ({\n  type: actions.DELETE_SHOPPING_BAG_ITEM,\n  item,\n});\n\n/*\n * For data state *\n */\nexport const fetchData = () => ({\n  type: actions.FETCH_DATA,\n});\n\nexport const requestBooksData = () => ({\n  type: actions.REQUEST_BOOKS_DATA,\n});\n\nexport const receiveBooksData = (data) => ({\n  type: actions.RECEIVE_BOOKS_DATA,\n  booksData: data,\n});\n","/*\n * App action types *\n */\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const SET_SELECTED_BOOK = \"SET_SELECTED_BOOK\";\nexport const CHECK_OUT = \"CHECK_OUT\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const CLEAR_ORDER_RECORDS = \"CLEAR_ORDER_RECORDS\";\nexport const DELETE_SHOPPING_BAG_ITEM = \"DELETE_SHOPPING_BAG_ITEM\";\n\n/*\n * Data action types*\n */\nexport const FETCH_DATA = \"FETCH_DATA\";\nexport const REQUEST_BOOKS_DATA = \"REQUEST_BOOKS_DATA\";\nexport const RECEIVE_BOOKS_DATA = \"RECEIVE_BOOKS_DATA\";\n","import React from \"react\";\nimport \"./Button.scss\";\n\nconst Button = ({ classAddon, text, handleClick }) => {\n  return (\n    <div className={`buttonWrap ${classAddon || \"\"}`}>\n      <button className=\"button\" onClick={handleClick}>{text || \"Button\"}</button>\n    </div>\n  )\n};\n\nexport default Button;\n","import React, { useEffect } from \"react\";\nimport \"./Book.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/actions/actions\";\nimport Button from \"../Button/Button\";\n\nconst Book = ({ book }) => {\n  const { image, title, subtitle } = book;\n\n  const dispatch = useDispatch();\n\n  const handleClickForDetail = () => {\n    console.log(\"Cover clicked:\", book);\n    dispatch(actions.setSelectedBook(book));\n  };\n\n  const handleClickButton = () => {\n    console.log(\"Book to add:\", book);\n    dispatch(actions.addToCart(book));\n  };\n\n  return (\n    <div className=\"bookItemWrap\">\n      <div className=\"bookCoverWrap\">\n        <div className=\"bookCover\" onClick={handleClickForDetail}>\n          <Link className=\"bookCoverLink\" to=\"/detail\"><img src={image} alt={title} /></Link>\n        </div>\n      </div>\n      <div className=\"bookTitle\">{title}</div>\n      {subtitle !== \"\" && <div className=\"bookSubtitle\">{subtitle}</div>}\n      <Button text=\"Add to cart\"  handleClick={handleClickButton} />\n    </div>\n  )\n};\n\nexport default Book;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Home.scss\";\nimport { isEmpty } from \"lodash\";\nimport Book from \"../../components/Book/Book\";\n\nconst Home = (props) => {\n  const { app, data, resetSelectedBookState } = props;\n  const { booksData = {} } = data;\n  const { books = [] } = booksData;\n  const { cart, selectedBook } = app;\n\n  const [bookList, setBookList] = useState([]);\n\n  console.log(\"Home - props\", props);\n\n  useEffect(() => {\n    if (selectedBook) {\n      resetSelectedBookState();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isEmpty(booksData)) return;\n    console.log(\"Home - booksData\", booksData);\n    if (books) {\n      const _books = booksData.books.map(book => ({id: Math.random(), ...book}));\n      console.log(\"Home - bookList\", _books);\n      setBookList(_books);\n    }\n    \n    return () => {};\n  }, [booksData]);\n\n  return (\n    <div className=\"homeWrap\">\n      {!isEmpty(bookList) && <ul className=\"bookList\">\n        {bookList.map(book => <li className=\"itemBook\" key={book.id}>\n          <Book book={book} cart={cart}/>\n        </li>)}\n      </ul>}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport \"./SelectedBook.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/actions/actions\";\nimport Button from \"../../components/Button/Button\";\nimport { routerPathNames } from \"../../shared/config/routerPathNames\";\n\nconst SelectedBook = (props) => {\n  console.log(\"SelectedBook - props\", props);\n  const { showMobileMenu, toggleMobileMenu, handleGoToHomepage } = props;\n  const { selectedBook } = props.app;\n\n  const dispatch = useDispatch();\n\n  const handleAddToCart = () => {\n    dispatch(actions.addToCart(selectedBook));\n  };\n\n  const handleBuyNow = () => {\n    dispatch(actions.addToCart(selectedBook));\n    window.location.href = routerPathNames.Cart;\n  };\n\n  useEffect(() => {\n    if (showMobileMenu) {\n      toggleMobileMenu();\n    };\n  }, []);\n\n  return (\n    <div className=\"selectedBookWrap\">\n      {selectedBook \n        ? (<div key={selectedBook.id}>\n            <div className=\"breadcrumb\"><Link to={routerPathNames.Home} onClick={handleGoToHomepage}>{`<- Back`}</Link></div>\n            <div className=\"detailContainer\">\n              <div className=\"detailLeftPart\">\n                <div className=\"detailImage\"><img src={selectedBook.image} alt={selectedBook.title} /></div>\n              </div>\n              <div className=\"detailRightPart\">\n                <div className=\"detailTitle\">{selectedBook.title}</div>\n                <div className=\"detailPrice\"><strong>Price: </strong>{selectedBook.price}</div>\n                <div className=\"detailIsbn\"><strong>ISBN: </strong>{selectedBook.isbn13}</div>\n                <div className=\"detailDescription\">\n                  <div><strong>Description: </strong></div>\n                  <div>{selectedBook.subtitle}</div>\n                </div>\n                <div className=\"buttonContainer\">\n                  <Button classAddon=\"detailButton\" text=\"Add to cart\" handleClick={handleAddToCart} />\n                  <Button classAddon=\"detailButton\" text=\"Buy now\" handleClick={handleBuyNow} />\n                </div>\n                \n              </div>\n            </div>\n          </div>)\n        : (<div className=\"emptyDetailInfo\">\n            Oops, you haven't selected a book.\n            <div className=\"emptyDetailBackToHome\"><Link to={routerPathNames.Home} onClick={handleGoToHomepage}>Go to homepage</Link></div>\n          </div>)\n      }\n    </div>\n  );\n};\n\nexport default SelectedBook;\n","import React from \"react\";\nimport \"./OrderedItem.scss\";\n\nconst OrderedItem = ({ item }) => {\n  return (\n    <div className=\"orderedItemWrap\">\n      <div className=\"orderHeader\">\n        <div className=\"orderTime\">Order placed: {item.ordertime || \"--\"}</div>\n      </div>\n      <div className=\"orderDetailContainer\">\n        <div className=\"orderImage\">\n          <img src={item.image} alt={item.title} />\n        </div>\n        <div className=\"orderDetail\">\n          <div className=\"itemTitle\">{item.title}</div>\n          <div className=\"itemPrice\"><strong>Price: </strong>{item.price}</div>\n          <div className=\"itemISBN\"><strong>ISBN: </strong>{item.isbn13}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default OrderedItem;\n","import React, { useEffect } from \"react\";\nimport \"./MyOrders.scss\";\nimport { Link } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/actions/actions\";\nimport Button from \"../../components/Button/Button\";\nimport OrderedItem from \"../../components/OrderedItem/OrderedItem\";\nimport { routerPathNames } from \"../../shared/config/routerPathNames\";\n\nconst MyOrders = (props) => {\n  console.log(\"MyOrders - props\", props);\n  const { resetSelectedBookState, handleGoToHomepage } = props;\n  const { myOrders, selectedBook } = props.app;\n\n  const dispatch = useDispatch();\n\n  const handleClearRecords = () => {\n    dispatch(actions.clearOrderRecords());\n  };\n\n  useEffect(() => {\n    if (selectedBook) {\n      resetSelectedBookState();\n    };\n  }, []);\n\n  return (\n    <div className=\"myOrdersWrap\">\n      {isEmpty(myOrders) \n        ? (<div className=\"emptyOrderInfo\">\n            Your order records is clean.\n            <div className=\"emptyOrderBackToHome\"><Link to={routerPathNames.Home} onClick={handleGoToHomepage}>Go back</Link></div>\n          </div>)\n        : (myOrders.map(item => <OrderedItem key={item.id} item={item} />))\n      }\n      {!isEmpty(myOrders) && <Button text=\"Clear records\" handleClick={handleClearRecords}/>}\n    </div>\n  );\n};\n\nexport default MyOrders;\n","import React from \"react\";\nimport \"./ShoppingBagItem.scss\";\n\nconst ShoppingBagItem = ({ item, handleDeleteItem }) => {\n  return (\n    <div className=\"shoppingBagItemWrap\">\n      <div className=\"shoppingItemDetail\">\n        <div className=\"shoppingItemName\">{item.title}</div>\n        <div className=\"shoppingItemPrice\">{item.price}</div>\n      </div>\n      <div className=\"shoppingItemAction\">\n        <div className=\"itemActionDelete\" onClick={() => handleDeleteItem(item)}>\n          <div className=\"deleteBtnStroke\" id=\"stroke01\"></div>\n          <div className=\"deleteBtnStroke\" id=\"stroke02\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ShoppingBagItem;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Cart.scss\";\nimport { Link } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/actions/actions\";\nimport Button from \"../../components/Button/Button\";\nimport { routerPathNames } from \"../../shared/config/routerPathNames\";\nimport ShoppingBagItem from \"../../components/ShoppingBagItem/ShoppingBagItem\";\nimport { TAX_AMOUNT, SHIPPING_CHARGE_AMOUNT } from \"../../shared/config/config\";\n\nconst Cart = (props) => {\n  console.log(\"Cart - props\", props);\n  const { resetSelectedBookState, handleGoToHomepage } = props;\n  const { cart, selectedBook } = props.app;\n\n  const taxAmount = TAX_AMOUNT;\n  const shippingChargeAmount = SHIPPING_CHARGE_AMOUNT;\n\n  const [consolidatedPrice, setConsolidatedPrice] = useState(0);\n\n  const dispatch = useDispatch();\n\n  const handleCancel = () => {\n    window.location.href = routerPathNames.Home;\n  };\n\n  const getMonthString = (month) => {\n    switch(month) {\n      case 0:\n        return \"January\";\n      case 1:\n        return \"February\";\n      case 2:\n        return \"March\";\n      case 3:\n        return \"April\";\n      case 4:\n        return \"May\";\n      case 5:\n        return \"June\";\n      case 6:\n        return \"July\";\n      case 7:\n        return \"August\";\n      case 8:\n        return \"September\";\n      case 9:\n        return \"October\";\n      case 10:\n        return \"November\";\n      case 11:\n        return \"December\";\n      default:\n          return \"\";\n    }\n  };\n\n  const handleCheckOut = () => {\n    const _dateObj = new Date();\n    const _day = _dateObj.getDate();\n    const _month = getMonthString(_dateObj.getMonth());\n    const _year = _dateObj.getFullYear();\n    const _itemsToCheckout = cart.map(item => ({...item, ordertime: `${_day} ${_month} ${_year}`}));\n    dispatch(actions.checkOut(_itemsToCheckout));\n    dispatch(actions.clearCart());\n    window.location.href = routerPathNames.MyOrders;\n  };\n\n  const handleDeleteItem = (item = {}) => {\n    dispatch(actions.deleteShoppingBagItem(item));\n  };\n\n  const getConsolidatedPrice = (items = []) => {\n    if (!isEmpty(items)) {\n      const consolidatedPrice = items.reduce((acc, item) => acc += +item.price.slice(1), 0);\n      return consolidatedPrice;\n    } else {\n      return 0;\n    }\n  };\n\n  useEffect(() => {\n    if (selectedBook) {\n      resetSelectedBookState();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(cart)) {\n      setConsolidatedPrice(getConsolidatedPrice(cart));\n    };\n  }, [cart]);\n\n  return (\n    <div className=\"cartWrap\">\n      {isEmpty(cart) \n        ? (<div className=\"emptyCartInfo\">\n              Your cart is empty.\n              <div className=\"emptyCartBackToHome\"><Link to={routerPathNames.Home} onClick={handleGoToHomepage}>Go back</Link></div>\n            </div>)\n        : (<div className=\"cartContainer\">\n            <div className=\"cartLeftPart\">\n              <div className=\"sectionTitle\">Shipping Address</div>\n              <div className=\"addressBox\"></div>\n              <div className=\"addressButtonContainer\">\n                <Button classAddon=\"addressButton\" text=\"Save address\" handleClick={()=>{}} />\n                <Button classAddon=\"addressButton\" text=\"Edit address\" handleClick={()=>{}} />\n              </div>\n              \n            </div>\n            <div className=\"cartRightPart\">\n              <div className=\"sectionTitle\">Shopping Bag</div>\n              <div className=\"selectedBooksBox\">\n                {cart.map(item => <ShoppingBagItem key={item.timestamp} item={item} handleDeleteItem={handleDeleteItem} />)}\n              </div>\n              <div className=\"sectionTitle\">Payment Info</div>\n              <div className=\"paymentInfo\">\n                <div className=\"paymentInfoItem\">\n                  <div className=\"itemName\">Item Price</div>\n                  <div className=\"priceValue\">{`$${consolidatedPrice.toFixed(2)}`}</div>\n                </div>\n                <div className=\"paymentInfoItem\">\n                  <div className=\"itemName\">Tax</div>\n                  <div className=\"priceValue\">{`$${taxAmount.toFixed(2)}`}</div>\n                </div>\n                <div className=\"paymentInfoItem\">\n                  <div className=\"itemName\">Shipping Charge</div>\n                  <div className=\"priceValue\">{`$${shippingChargeAmount.toFixed(2)}`}</div>\n                </div>\n                <div className=\"paymentInfoItem\" id=\"totalPrice\">\n                  <div className=\"itemName\">Total</div>\n                  <div className=\"priceValue\">{`$${(consolidatedPrice + taxAmount + shippingChargeAmount).toFixed(2)}`}</div>\n                </div>\n                <div className=\"paymentButtonContainer\">\n                  <Button classAddon=\"paymentButton\" text=\"Cancel\" handleClick={handleCancel} />\n                  <Button classAddon=\"paymentButton\" text=\"Check out\" handleClick={handleCheckOut} />\n                </div>\n              </div>\n            </div>\n          </div>)\n      }\n    </div>\n  );\n};\n\nexport default Cart;\n","/* eslint-disable max-len */\n\n/*\n* The api endpoint https://api.myjson.com/bins/j82l2 is offline. So I found this public api. \n*/\nexport const API_ENDPOINT_BOOKS = \"https://api.itbook.store/1.0/search/windows\";\n\nexport const TAX_AMOUNT = 7.50;\n\nexport const SHIPPING_CHARGE_AMOUNT = 5.00;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport \"./App.scss\";\nimport TopBar from \"./layout/topBar/TopBar\";\nimport { Home, SelectedBook, MyOrders, Cart } from \"./modules\";\nimport * as actions from \"./store/actions/actions\";\nimport { pageNames } from \"./shared/config/pageNames\";\nimport { routerPathNames } from \"./shared/config/routerPathNames\";\n\nfunction App(props) {\n  const dispatch = useDispatch();\n  const app = useSelector((state) => state.app);\n\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n\n  const toggleMobileMenu = () => {\n    setShowMobileMenu(!showMobileMenu);\n  };\n\n  const handleSetCurrentPage = (pageName) => {\n    dispatch(actions.setCurrentPage(`${pageName}`));\n  };\n\n  const resetSelectedBookState = () => {\n    dispatch(actions.setSelectedBook(null));\n  };\n\n  const handleGoToHomepage = () => {\n    if (showMobileMenu) {\n      toggleMobileMenu();\n    }\n    handleSetCurrentPage(pageNames.Home);\n  };\n\n  useEffect(() => {\n    /* * Initialization - fetch data from api * */\n    dispatch(actions.requestBooksData());\n    return () => {};\n  }, [dispatch]);\n\n  const topBarProps = { ...app, handleSetCurrentPage, showMobileMenu, toggleMobileMenu, handleGoToHomepage };\n  const homeProps = { ...props, resetSelectedBookState };\n  const selectedBookProps = { ...props, showMobileMenu, toggleMobileMenu, handleGoToHomepage };\n  const myOrdersProps = { ...props, resetSelectedBookState, handleGoToHomepage };\n  const cartProps = { ...props, resetSelectedBookState, handleGoToHomepage };\n\n  return (\n    <div id=\"AppContainer\" className=\"App\">\n      <Router>\n        <TopBar {...topBarProps} />\n        <Switch>\n          <Route exact path={routerPathNames.Home}>\n            <Home {...homeProps} />\n          </Route>\n          <Route path={routerPathNames.Detail}>\n            <SelectedBook {...selectedBookProps} />\n          </Route>\n          <Route path={routerPathNames.MyOrders}>\n            <MyOrders {...myOrdersProps} />\n          </Route>\n          <Route path={routerPathNames.Cart}>\n            <Cart {...cartProps} />\n          </Route>\n          <Route path={routerPathNames.Default}>\n            <Home {...homeProps} />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1>Not found!</h1>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  app: state.app,\n  data: state.data,\n});\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actions from \"../actions/actionTypes\";\nimport { isEmpty } from \"lodash\";\n\nconst appReducer = (state = {}, action) => {\n  switch (action.type) {\n    case actions.SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      };\n      case actions.ADD_TO_CART:\n        return {\n          ...state,\n          cart: [...state.cart, action.item],\n        };\n      case actions.SET_SELECTED_BOOK:\n        return {\n          ...state,\n          selectedBook: action.item,\n        };\n      case actions.CHECK_OUT:\n        return {\n          ...state,\n          myOrders: isEmpty(state.myOrders) ? [...action.item] : [...action.item, ...state.myOrders],\n        };\n      case actions.CLEAR_CART:\n        return {\n          ...state,\n          cart: [],\n        };\n      case actions.CLEAR_ORDER_RECORDS:\n        return {\n          ...state,\n          myOrders: [],\n        };\n      case actions.DELETE_SHOPPING_BAG_ITEM:\n        return {\n          ...state,\n          cart: state.cart.filter(item => item.timestamp !== action.item.timestamp || item.id !== action.item.id),\n        };\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","/* eslint-disable indent */\nimport * as actions from \"../actions/actionTypes\";\n\nconst dataReducer = (state = {}, action) => {\n  switch (action.type) {\n    // case actions.FETCH_DATA:\n    //   console.log(\"dataReducer - FETCH_DATA\");\n    //   return {\n    //     ...state,\n    //   };\n    case actions.RECEIVE_BOOKS_DATA:\n      return {\n        ...state,\n        booksData: action.booksData,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./appReducer\";\nimport dataReducer from \"./dataReducer\";\n\nconst reducers = combineReducers({\n  app: appReducer,\n  data: dataReducer,\n});\n\nexport default reducers;\n","import { API_ENDPOINT_BOOKS } from \"../config/config\";\nimport sampleData from \"../../data/sampleData.json\";\n\nexport const fetchBooksData = async () => {\n  try {\n    const response = await fetch(API_ENDPOINT_BOOKS, {\n        mode: \"no-cors\",\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.log(\"Fetch books data failed, use local sample data --\", err);\n    return sampleData;\n  }\n};\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { REQUEST_BOOKS_DATA } from \"./actions/actionTypes\";\nimport { receiveBooksData } from \"./actions/actions\";\nimport { fetchBooksData } from \"../shared/api/api\";\n\nfunction* getBooksData() {\n  try {\n    const booksData = yield call(fetchBooksData);\n    yield put(receiveBooksData(booksData));\n  } catch (err) {\n    console.log(\"Couldn't get books data:\", err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(REQUEST_BOOKS_DATA, getBooksData);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport composedReducer from \"./reducers/reducers\";\nimport { pageNames } from \"../shared/config/pageNames\";\nimport rootSaga from \"./sagas\";\n\nconst initialState = {\n  app: {\n    currentPage: pageNames.Home,\n    selectedBook: null,\n    cart: [],\n    myOrders: [],\n  },\n  data: {},\n};\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\n// const composeEnhancers = compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, composedReducer);\n\nexport const store = createStore(persistedReducer, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n","import React from \"react\";\nimport \"./Loading.scss\";\n\nconst Loading = ({ text = \"Loading...\" }) => {\n  return (\n    <div className=\"loadingWrap\">\n      {text}\n    </div>\n  )\n}\n\nexport default Loading;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store, persistor } from \"./app/store/store\";\nimport Loading from \"./app/components/Loading/Loading\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loading />} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}